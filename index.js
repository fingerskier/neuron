let Neuron = require('./neuron.js')

let N = new Neuron({
    size: 3,
    threshold: 0.01
})

let ins = [0.1, 0.2, 0.3]
let outs = [0.3, 0.2, 0.4]

let blih = [
    [1, 1, 0.8965776, 0.2963785, 0.9237237],
    [1, 1, 0.8589375, 0.4319688, 0.5495479],
    [1, 1, 0.0804579, 0.8252872, 0.2931826],
    [1, 1, 0.1809184, 0.2960195, 0.7744692],
    [1, 1, 0.1829761, 0.7965137, 0.4980497],
    [1, 1, 0.0677336, 0.9137530, 0.9896880],
    [1, 1, 0.0361620, 0.5173962, 0.1142575],
    [1, 1, 0.7403844, 0.6703579, 0.2840220],
    [1, 1, 0.9183631, 0.5800340, 0.9516041],
    [1, 1, 0.8831610, 0.5736651, 0.1448173],
    [1, 1, 0.6055902, 0.0608027, 0.8612337],
    [1, 1, 0.0776333, 0.8268638, 0.9654691],
    [1, 1, 0.5547062, 0.6716555, 0.0865993],
]

let bloh = [
    [0, 0, 0.8965776, 0.2963785, 0.9237237],
    [0, 0, 0.8589375, 0.4319688, 0.5495479],
    [0, 0, 0.0804579, 0.8252872, 0.2931826],
    [0, 0, 0.1809184, 0.2960195, 0.7744692],
    [0, 0, 0.1829761, 0.7965137, 0.4980497],
    [0, 0, 0.0677336, 0.9137530, 0.9896880],
    [0, 0, 0.0361620, 0.5173962, 0.1142575],
    [0, 0, 0.7403844, 0.6703579, 0.2840220],
    [0, 0, 0.9183631, 0.5800340, 0.9516041],
    [0, 0, 0.8831610, 0.5736651, 0.1448173],
    [0, 0, 0.6055902, 0.0608027, 0.8612337],
    [0, 0, 0.0776333, 0.8268638, 0.9654691],
    [0, 0, 0.5547062, 0.6716555, 0.0865993],
]


console.clear()


N.train(ins, outs)
print_top(N.net)
for (let I = 0; I < 10000; I++) N.train(ins, outs)
print_top(N.net)


function print_top(array3) {
    console.log("===")

    let line = ""

    for (let x in array3){
        line = ""
        for (let y in array3[x]){
            line += array3[x][y][0].toFixed(2) + ',\t'
        }
        
        console.log(line)
    }
    
    console.log("===")
}

function print(array3) {
    let result = "===\n\r"
    
    for (let x in array3){
        for (let y in array3[x]){
            for (let z in array3[x][y]){
                result += array3[x][y][z].toFixed(2) + '\t'
    }}}
    
    result = "===\n\r"
    
    return result
}